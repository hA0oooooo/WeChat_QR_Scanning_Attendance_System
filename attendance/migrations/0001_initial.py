# Generated by Django 4.2.10 on 2025-06-14 16:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.CharField(max_length=12, primary_key=True, serialize=False, verbose_name='课程代码')),
                ('course_name', models.CharField(max_length=50, verbose_name='课程名称')),
            ],
            options={
                'verbose_name': '课程信息',
                'verbose_name_plural': '课程信息',
                'db_table': 'Course',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dept_id', models.PositiveSmallIntegerField(auto_created=True, primary_key=True, serialize=False, verbose_name='院系ID')),
                ('dept_name', models.CharField(max_length=50, unique=True, verbose_name='院系名')),
            ],
            options={
                'verbose_name': '院系',
                'verbose_name_plural': '院系',
                'db_table': 'Department',
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('major_id', models.PositiveSmallIntegerField(auto_created=True, primary_key=True, serialize=False, verbose_name='专业ID')),
                ('major_name', models.CharField(max_length=50, unique=True, verbose_name='专业名')),
                ('dept', models.ForeignKey(db_column='dept_id', on_delete=django.db.models.deletion.RESTRICT, to='attendance.department', verbose_name='所属院系')),
            ],
            options={
                'verbose_name': '专业',
                'verbose_name_plural': '专业',
                'db_table': 'Major',
            },
        ),
        migrations.CreateModel(
            name='PermissionSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_view_attendance', models.BooleanField(default=True, verbose_name='学生查看考勤记录')),
                ('student_apply_leave', models.BooleanField(default=True, verbose_name='学生申请请假')),
                ('teacher_create_attendance', models.BooleanField(default=True, verbose_name='教师创建考勤')),
                ('teacher_approve_leave', models.BooleanField(default=True, verbose_name='教师审批请假')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '权限设置',
                'verbose_name_plural': '权限设置',
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_name', models.CharField(default='微信扫码考勤系统', max_length=100, verbose_name='系统名称')),
                ('attendance_start_time', models.TimeField(default='08:00', verbose_name='默认考勤开始时间')),
                ('attendance_end_time', models.TimeField(default='17:00', verbose_name='默认考勤结束时间')),
                ('late_threshold', models.IntegerField(default=15, verbose_name='迟到阈值（分钟）')),
                ('early_leave_threshold', models.IntegerField(default=15, verbose_name='早退阈值（分钟）')),
                ('max_leave_days', models.IntegerField(default=30, verbose_name='最大请假天数')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '系统设置',
                'verbose_name_plural': '系统设置',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacher_id', models.CharField(max_length=5, primary_key=True, serialize=False, verbose_name='教师工号')),
                ('teacher_name', models.CharField(max_length=50, verbose_name='教师姓名')),
                ('dept', models.ForeignKey(db_column='dept_id', on_delete=django.db.models.deletion.RESTRICT, to='attendance.department', verbose_name='所属院系')),
            ],
            options={
                'verbose_name': '教师信息',
                'verbose_name_plural': '教师信息',
                'db_table': 'Teacher',
            },
        ),
        migrations.CreateModel(
            name='TeachingAssignment',
            fields=[
                ('assignment_id', models.PositiveIntegerField(auto_created=True, primary_key=True, serialize=False, verbose_name='教学安排ID')),
                ('course', models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='attendance.course', verbose_name='课程')),
                ('teacher', models.ForeignKey(db_column='teacher_id', on_delete=django.db.models.deletion.CASCADE, to='attendance.teacher', verbose_name='教师')),
            ],
            options={
                'verbose_name': '教学安排',
                'verbose_name_plural': '教学安排',
                'db_table': 'TeachingAssignment',
                'unique_together': {('teacher', 'course')},
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=200, verbose_name='操作')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP地址')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '系统日志',
                'verbose_name_plural': '系统日志',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('stu_id', models.CharField(max_length=11, primary_key=True, serialize=False, verbose_name='学生学号')),
                ('stu_name', models.CharField(max_length=50, verbose_name='学生姓名')),
                ('stu_sex', models.PositiveSmallIntegerField(verbose_name='学生性别：1-男，2-女')),
                ('openid', models.CharField(max_length=50, unique=True, verbose_name='微信openid')),
                ('major', models.ForeignKey(db_column='major_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='attendance.major', verbose_name='学生专业')),
            ],
            options={
                'verbose_name': '学生信息',
                'verbose_name_plural': '学生信息',
                'db_table': 'Student',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('enroll_id', models.AutoField(primary_key=True, serialize=False, verbose_name='选课记录ID')),
                ('semester', models.CharField(max_length=6, verbose_name='选课学期')),
                ('course', models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='attendance.course', verbose_name='课程')),
                ('student', models.ForeignKey(db_column='stu_id', on_delete=django.db.models.deletion.CASCADE, to='attendance.student', verbose_name='学生')),
            ],
            options={
                'verbose_name': '选课记录',
                'verbose_name_plural': '选课记录',
                'db_table': 'Enrollment',
                'unique_together': {('student', 'course', 'semester')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='dept',
            field=models.ForeignKey(db_column='dept_id', on_delete=django.db.models.deletion.RESTRICT, to='attendance.department', verbose_name='开课院系'),
        ),
        migrations.CreateModel(
            name='ClassSchedule',
            fields=[
                ('schedule_id', models.PositiveIntegerField(auto_created=True, primary_key=True, serialize=False, verbose_name='时间安排ID')),
                ('weekday', models.PositiveSmallIntegerField(choices=[(1, '星期1'), (2, '星期2'), (3, '星期3'), (4, '星期4'), (5, '星期5'), (6, '星期6'), (7, '星期7')], verbose_name='星期')),
                ('start_period', models.PositiveSmallIntegerField(verbose_name='开始节次')),
                ('end_period', models.PositiveSmallIntegerField(verbose_name='结束节次')),
                ('location', models.CharField(max_length=50, verbose_name='上课地点')),
                ('assignment', models.ForeignKey(db_column='assignment_id', on_delete=django.db.models.deletion.CASCADE, to='attendance.teachingassignment', verbose_name='教学安排')),
            ],
            options={
                'verbose_name': '课程时间安排',
                'verbose_name_plural': '课程时间安排',
                'db_table': 'ClassSchedule',
            },
        ),
        migrations.CreateModel(
            name='AttendanceEvent',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False, verbose_name='考勤事件ID')),
                ('event_date', models.DateField(verbose_name='事件日期')),
                ('scan_start_time', models.TimeField(verbose_name='扫码有效开始时间')),
                ('scan_end_time', models.TimeField(verbose_name='扫码有效结束时间')),
                ('event_status', models.PositiveSmallIntegerField(default=1, verbose_name='二维码/事件状态：1-有效，2-无效')),
                ('course', models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='attendance.course', verbose_name='课程')),
            ],
            options={
                'verbose_name': '考勤事件',
                'verbose_name_plural': '考勤事件',
                'db_table': 'AttendanceEvent',
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('leave_request_id', models.AutoField(primary_key=True, serialize=False, verbose_name='请假申请ID')),
                ('reason', models.TextField(verbose_name='请假内容')),
                ('submit_time', models.DateTimeField(auto_now_add=True, verbose_name='提交时间')),
                ('approval_status', models.PositiveSmallIntegerField(default=1, verbose_name='审批状态：1-待审批，2-已批准，3-已驳回')),
                ('approval_timestamp', models.DateTimeField(blank=True, null=True, verbose_name='审批时间')),
                ('approver_notes', models.TextField(blank=True, null=True, verbose_name='审批备注')),
                ('approver', models.ForeignKey(db_column='approver_teacher_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='attendance.teacher', verbose_name='审批教师')),
                ('enrollment', models.ForeignKey(db_column='enroll_id', on_delete=django.db.models.deletion.CASCADE, to='attendance.enrollment', verbose_name='选课记录')),
                ('event', models.ForeignKey(db_column='event_id', on_delete=django.db.models.deletion.CASCADE, to='attendance.attendanceevent', verbose_name='考勤事件')),
            ],
            options={
                'verbose_name': '请假申请',
                'verbose_name_plural': '请假申请',
                'db_table': 'LeaveRequest',
                'unique_together': {('enrollment', 'event')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('attend_id', models.AutoField(primary_key=True, serialize=False, verbose_name='考勤记录ID')),
                ('scan_time', models.DateTimeField(blank=True, null=True, verbose_name='扫码考勤时间')),
                ('status', models.PositiveSmallIntegerField(verbose_name='考勤状态：1-出勤，2-缺勤，3-请假')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('enrollment', models.ForeignKey(db_column='enroll_id', on_delete=django.db.models.deletion.CASCADE, to='attendance.enrollment', verbose_name='选课记录')),
                ('event', models.ForeignKey(db_column='event_id', on_delete=django.db.models.deletion.CASCADE, to='attendance.attendanceevent', verbose_name='考勤事件')),
            ],
            options={
                'verbose_name': '考勤记录',
                'verbose_name_plural': '考勤记录',
                'db_table': 'Attendance',
                'unique_together': {('enrollment', 'event')},
            },
        ),
    ]
